{% comment %}
  Props:
  title:       string - (required) - Item Title
  filter:      Shopify filter object - (required)
  as_buttons:  boolean - (optional) Display filters as buttons instead of checkboxes
  show_icon:   boolean - (optional)
  is_open:     boolean - (optional)
{% endcomment %}

{% if filter.type == 'price_range' %}
  <div class="ra-range-slider mx-auto pb-7">
    {% assign min_start = filter.min_value.value | default: 0 | money_without_currency %}
    {% assign max_start = filter.max_value.value | default: filter.range_max | money_without_currency %}
    <ra-range-slider
      data-min="0"
      data-max="{{ filter.range_max | money_without_currency }}"
      data-min-start="{{ min_start }}"
      data-max-start="{{ max_start }}"
    >
      <div class="ra-slider"></div>
      <input
        type="hidden"
        id="PriceMin"
        name="{{ filter.min_value.param_name }}"
        value="{{ filter.min_value.value | money_without_currency }}"
      >
      <input
        type="hidden"
        id="PriceMax"
        name="{{ filter.max_value.param_name }}"
        value="{{ filter.max_value.value | money_without_currency }}"
      >
    </ra-range-slider>
  </div>
{% elsif display_as_swatches %}
  <div class="ra-option-picker ra-option-picker--grid">
    <div class="ra-option-picker__items flex flex-wrap gap-2">
      {%- for value in filter.values -%}
        {% assign checked = false %}
        {% assign disabled = true %}
        {% assign count = value.count %}
        {% if filter.active_values contains value %}
          {% assign checked = true %}
        {% endif %}
        {% if count > 0 %}
          {% assign disabled = false %}
        {% endif %}
        {%- render 'ra-swatch-button',
          name: value.param_name,
          class: 'ra-filter-input',
          id: value.param_name,
          checked: checked,
          value: value.value,
          label: value.label,
          style: 'classic',
          disabled: disabled
        -%}
      {%- endfor -%}
    </div>
  </div>
{% elsif display_as_buttons %}
  <div class="ra-option-picker ra-option-picker--grid">
    <div class="ra-option-picker__items flex flex-wrap gap-2">
      {%- for value in filter.values -%}
        {% assign checked = false %}
        {% assign disabled = true %}
        {% assign count = value.count %}
        {% if filter.active_values contains value %}
          {% assign checked = true %}
        {% endif %}
        {% if count > 0 %}
          {% assign disabled = false %}
        {% endif %}
        {%- render 'ra-filter-button',
          name: value.param_name,
          class: 'ra-filter-input',
          id: value.param_name,
          checked: checked,
          value: value.value,
          label: value.label,
          style: 'classic',
          disabled: disabled
        -%}
      {%- endfor -%}
    </div>
  </div>
{% else %}
  <ul class="list-none" data-filter="{{ filter.label | handleize }}">
    {% assign max_visible_options = 5 %}
    {%- for value in filter.values -%}
      {% assign show_more_class = 'filter-show' %}
      {% assign checked = false %}
      {% assign disabled = true %}
      {% assign count = value.count %}
      {% if filter.active_values contains value %}
        {% assign checked = true %}
      {% endif %}
      {% if count > 0 %}
        {% assign disabled = false %}
      {% endif %}
      {% if forloop.index > max_visible_options %}
        {% assign show_more_class = 'filter-hide' %}
      {% endif %}
      <li class="mb-3 ml-[2px] {{ show_more_class }}">
        {%- render 'ra-checkbox',
          name: value.param_name,
          class: 'ra-filter-input',
          id: value.param_name,
          checked: checked,
          value: value.value,
          label: value.label,
          style: 'classic',
          disabled: disabled
        -%}
      </li>
    {%- endfor -%}
  </ul>
  {% if filter.values.size > max_visible_options %}
    <div class="cursor-pointer" data-filter-label="{{ filter.label | handleize }}" onclick="showMoreFilterToggle('{{ filter.label | handleize }}')">show more</div>
  {% endif %}
{% endif %}

<script>
  function showMoreFilterToggle(filterHandle) {
    const filtersToToggle = document.querySelectorAll(`[data-filter='${filterHandle}'] .filter-hide`);
    filtersToToggle.forEach((filter) => {
      if (filter.classList.contains('active')) {
        filter.classList.remove('active');
        document.querySelector(`[data-filter-label='${filterHandle}']`).innerText = "show more";
      } else {
        filter.classList.add('active');
        document.querySelector(`[data-filter-label='${filterHandle}']`).innerText = "show less";
        document.querySelector(`.${filterHandle} .ra-accordion-item__content`).style.height = "auto";
      }
    });
  };

</script>